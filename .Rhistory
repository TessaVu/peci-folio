color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Population Density: ", format(pop_density, big.mark = ",", digits = 2, nsmall = 2), "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Median Household Income"
) %>%
# Undergrad.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pct_undergrad_age)(pct_undergrad_age),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_undergrad_age, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Undergraduate Age (18 - 24 yrs.)"
) %>%
# Drop out.
addPolygons(
data = map_tracts,
fillColor = ~colorNumeric("viridis", pct_drop_out)(pct_drop_out),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_drop_out, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Drop-Out (16 - 19 yrs.)"
) %>%
# Bachelor's.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pct_bach)(pct_bach),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_bach, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Bachelor's Degrees or More"
) %>%
# Add layer controls
addLayersControl(
overlayGroups = c("Population Density", "Median Household Income", "Percent Drop-Out (16 - 19 yrs.)", "Percent Undergraduate Age (18 - 24 yrs.)", "Percent Bachelor's Degrees or More"),
options = layersControlOptions(collapsed = FALSE)
) %>%
hideGroup(c("Population Density", "Median Household Income", "Percent Undergraduate Age (18 - 24 yrs.)", "Percent Bachelor's Degrees or More"))
education_map
#| echo: false
# Leaflet mapping.
# Base layer.
housing_map <- leaflet(map_tracts) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = -75.1638, lat = 39.9523, zoom = 11) %>%
# Population density.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pop_density)(pop_density),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Population Density: ", format(pop_density, big.mark = ",", digits = 2, nsmall = 2), "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Population Density"
) %>%
# Median income.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", med_h_inc)(med_h_inc),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Population Density: ", format(pop_density, big.mark = ",", digits = 2, nsmall = 2), "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Median Household Income"
) %>%
# Homeowner.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pct_homeowner)(pct_homeowner),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_homeowner, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Homeowner"
) %>%
# Renter.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pct_renter)(pct_renter),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_renter, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Renter"
) %>%
# No health insurance.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pct_no_health_insurance)(pct_no_health_insurance),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_no_health_insurance, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent No Health Insurance"
) %>%
# Add layer controls
addLayersControl(
overlayGroups = c("Population Density", "Median Household Income", "Percent Homeowner", "Percent Renter", "Percent No Health Insurance"),
options = layersControlOptions(collapsed = FALSE)
) %>%
hideGroup(c("Population Density", "Median Household Income", "Percent Renter", "Percent No Health Insurance"))
housing_map
#| echo: false
# Leaflet mapping.
land_use <- st_read("data/Land_Use/Land_Use.shp")
View(land_use)
land_use <- land_use %>%
select(-c(c_dig1))
View(land_use)
#| echo: false
# Leaflet mapping.
land_use <- st_read("data/Land_Use/Land_Use.shp")
land_use <- land_use %>%
select(c_dig1)
View(land_use)
write.csv(land_use, "data/land_use_trim.csv", row.names = FALSE)
st_write(land_use, "data/land_use_trim.shp", delete_dsn = TRUE)
#| echo: false
# Leaflet mapping.
land_use <- st_read("data/Land_Use/Land_Use.shp")
land_use <- land_use %>%
select(c_dig1)
View(land_use)
st_write(land_use, "data/land_use_trim.shp", delete_dsn = TRUE)
#| echo: false
# Leaflet mapping.
land_use <- st_read("data/Land_Use/Land_Use.shp")
land_use <- land_use %>%
select(c_dig1)
land_use$c_dig1[land_use$c_dig1 == 1] <- "Residential"
land_use$c_dig1[land_use$c_dig1 == 2] <- "Commercial"
land_use$c_dig1[land_use$c_dig1 == 3] <- "Industrial"
land_use$c_dig1[land_use$c_dig1 == 4] <- "Civic / Institution"
land_use$c_dig1[land_use$c_dig1 == 5] <- "Transportation"
land_use$c_dig1[land_use$c_dig1 == 6] <- "Culture / Recreation"
land_use$c_dig1[land_use$c_dig1 == 7] <- "Park / Open Space"
land_use$c_dig1[land_use$c_dig1 == 8] <- "Water"
land_use$c_dig1[land_use$c_dig1 == 9] <- "Vacant / Other"
land_use$c_dig1 <- as.factor(land_use$c_dig1)
landuse_colors <- c(
"1" = "#f2c649",  # Residential
"2" = "#e57200",  # Commercial
"3" = "#a67c52",  # Industrial
"4" = "#7f8dd3",  # Civic/Institution
"5" = "#c0c0c0",  # Transportation
"6" = "#ba68c8",  # Culture/Recreation
"7" = "#55a868",  # Park/Open Space
"8" = "#4fa9e8",  # Water
"9" = "#d9d9d9"   # Vacant/Other
)
pal_landuse <- colorFactor(palette = landuse_colors, domain = land_use$c_dig1)
# Base layer.
land_use_map <- leaflet(map_tracts) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = -75.1638, lat = 39.9523, zoom = 11) %>%
# Population density.
addPolygons(
data = map_tracts,
fillColor = ~pal_landuse(c_dig1),
color = "black",       # thin border line
weight = 0.3,
fillOpacity = 0.8,
label = ~paste("Land Use:", c_dig1),
highlightOptions = highlightOptions(
weight = 1,
color = "white",
fillOpacity = 0.9,
bringToFront = TRUE
) %>%
addLegend(
"bottomright",
pal = pal_landuse,
values = ~c_dig1,
title = "Land Use",
labFormat = labelFormat(
transform = function(x) {
c("Residential", "Commercial", "Industrial", "Civic/Institution",
"Transportation", "Culture/Recreation", "Park/Open Space", "Water", "Vacant/Other")[as.numeric(x)]
}
),
opacity = 0.9
)
)
names(land_use)
# Base layer.
land_use_map <- leaflet(map_tracts) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = -75.1638, lat = 39.9523, zoom = 11) %>%
# Population density.
addPolygons(
data = map_tracts,
fillColor = ~pal_landuse(c_dig1),
color = "black",       # thin border line
weight = 0.3,
fillOpacity = 0.8,
label = ~paste("Land Use:", c_dig1),
highlightOptions = highlightOptions(
weight = 1,
color = "white",
fillOpacity = 0.9,
bringToFront = TRUE
) %>%
addLegend(
"bottomright",
pal = pal_landuse,
values = ~c_dig1,
title = "Land Use",
labFormat = labelFormat(
transform = function(x) {
c("Residential", "Commercial", "Industrial", "Civic/Institution",
"Transportation", "Culture/Recreation", "Park/Open Space", "Water", "Vacant/Other")[as.numeric(x)]
}
),
opacity = 0.9
)
)
# Base layer.
land_use_map <- leaflet(land_use) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = -75.1638, lat = 39.9523, zoom = 11) %>%
# Population density.
addPolygons(
data = map_tracts,
fillColor = ~pal_landuse(c_dig1),
color = "black",       # thin border line
weight = 0.3,
fillOpacity = 0.8,
label = ~paste("Land Use:", c_dig1),
highlightOptions = highlightOptions(
weight = 1,
color = "white",
fillOpacity = 0.9,
bringToFront = TRUE
) %>%
addLegend(
"bottomright",
pal = pal_landuse,
values = ~c_dig1,
title = "Land Use",
labFormat = labelFormat(
transform = function(x) {
c("Residential", "Commercial", "Industrial", "Civic/Institution",
"Transportation", "Culture/Recreation", "Park/Open Space", "Water", "Vacant/Other")[as.numeric(x)]
}
),
opacity = 0.9
)
)
# Base layer.
land_use_map <- leaflet(land_use) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = -75.1638, lat = 39.9523, zoom = 11) %>%
# Population density.
addPolygons(
data = land_use,
fillColor = ~pal_landuse(c_dig1),
color = "black",       # thin border line
weight = 0.3,
fillOpacity = 0.8,
label = ~paste("Land Use:", c_dig1),
highlightOptions = highlightOptions(
weight = 1,
color = "white",
fillOpacity = 0.9,
bringToFront = TRUE
) %>%
addLegend(
"bottomright",
pal = pal_landuse,
values = ~c_dig1,
title = "Land Use",
labFormat = labelFormat(
transform = function(x) {
c("Residential", "Commercial", "Industrial", "Civic/Institution",
"Transportation", "Culture/Recreation", "Park/Open Space", "Water", "Vacant/Other")[as.numeric(x)]
}
),
opacity = 0.9
)
)
st_crs(land_use)
View(land_use)
land_use <- land_use %>%
st_set_crs(crs = 3857) %>%
st_transform(crs = map_tracts)
land_use <- land_use %>%
st_set_crs(crs = 3857)
land_use <- land_use %>%
st_set_crs(3857)
land_use <- land_use %>%
st_transform(crs = map_tracts)
land_use <- land_use %>%
st_transform(crs = 4326)
View(land_use)
# Base layer.
land_use_map <- leaflet(land_use) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = -75.1638, lat = 39.9523, zoom = 11) %>%
# Population density.
addPolygons(
data = land_use,
fillColor = ~pal_landuse(c_dig1),
color = "black",       # thin border line
weight = 0.3,
fillOpacity = 0.8,
label = ~paste("Land Use:", c_dig1),
highlightOptions = highlightOptions(
weight = 1,
color = "white",
fillOpacity = 0.9,
bringToFront = TRUE
) %>%
addLegend(
"bottomright",
pal = pal_landuse,
values = ~c_dig1,
title = "Land Use",
labFormat = labelFormat(
transform = function(x) {
c("Residential", "Commercial", "Industrial", "Civic/Institution",
"Transportation", "Culture/Recreation", "Park/Open Space", "Water", "Vacant/Other")[as.numeric(x)]
}
),
opacity = 0.9
)
)
#| echo: false
# Leaflet mapping.
# --- Load and prepare data
land_use <- st_read("data/Land_Use/Land_Use.shp") %>%
st_set_crs(3857) %>%
st_transform(4326) %>%
select(c_dig1) %>%
mutate(
c_dig1 = recode_factor(
c_dig1,
`1` = "Residential",
`2` = "Commercial",
`3` = "Industrial",
`4` = "Civic / Institution",
`5` = "Transportation",
`6` = "Culture / Recreation",
`7` = "Park / Open Space",
`8` = "Water",
`9` = "Vacant / Other"
)
)
# --- Define palette keyed by names (not numbers)
landuse_colors <- c(
"Residential"        = "#f2c649",
"Commercial"         = "#e57200",
"Industrial"         = "#a67c52",
"Civic / Institution"= "#7f8dd3",
"Transportation"     = "#c0c0c0",
"Culture / Recreation"= "#ba68c8",
"Park / Open Space"  = "#55a868",
"Water"              = "#4fa9e8",
"Vacant / Other"     = "#d9d9d9"
)
# --- Start map
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lng = -75.1638, lat = 39.9523, zoom = 11)
# --- Add each land-use category as its own overlay group
for (cat in names(landuse_colors)) {
subset_data <- land_use[land_use$c_dig1 == cat, ]
if (nrow(subset_data) == 0) next  # skip if no polygons
m <- m %>%
addPolygons(
data = subset_data,
group = cat,
fillColor = landuse_colors[cat],
color = "black",
weight = 0.3,
fillOpacity = 0.8,
label = ~paste("Land Use:", c_dig1),
highlightOptions = highlightOptions(
weight = 1,
color = "white",
fillOpacity = 0.9,
bringToFront = TRUE
)
)
}
# --- Add layer control and legend
m %>%
addLayersControl(
overlayGroups = names(landuse_colors),
options = layersControlOptions(collapsed = FALSE)
) %>%
addLegend(
"bottomright",
colors = landuse_colors,
labels = names(landuse_colors),
title = "Land Use",
opacity = 0.9
)
land_use_map
