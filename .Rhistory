pal = pal_landuse,
values = ~c_dig1,
title = "Land Use",
labFormat = labelFormat(
transform = function(x) {
c("Residential", "Commercial", "Industrial", "Civic/Institution",
"Transportation", "Culture/Recreation", "Park/Open Space", "Water", "Vacant/Other")[as.numeric(x)]
}
),
opacity = 0.9
)
)
st_crs(land_use)
View(land_use)
land_use <- land_use %>%
st_set_crs(crs = 3857) %>%
st_transform(crs = map_tracts)
land_use <- land_use %>%
st_set_crs(crs = 3857)
land_use <- land_use %>%
st_set_crs(3857)
land_use <- land_use %>%
st_transform(crs = map_tracts)
land_use <- land_use %>%
st_transform(crs = 4326)
View(land_use)
# Base layer.
land_use_map <- leaflet(land_use) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = -75.1638, lat = 39.9523, zoom = 11) %>%
# Population density.
addPolygons(
data = land_use,
fillColor = ~pal_landuse(c_dig1),
color = "black",       # thin border line
weight = 0.3,
fillOpacity = 0.8,
label = ~paste("Land Use:", c_dig1),
highlightOptions = highlightOptions(
weight = 1,
color = "white",
fillOpacity = 0.9,
bringToFront = TRUE
) %>%
addLegend(
"bottomright",
pal = pal_landuse,
values = ~c_dig1,
title = "Land Use",
labFormat = labelFormat(
transform = function(x) {
c("Residential", "Commercial", "Industrial", "Civic/Institution",
"Transportation", "Culture/Recreation", "Park/Open Space", "Water", "Vacant/Other")[as.numeric(x)]
}
),
opacity = 0.9
)
)
#| echo: false
# Leaflet mapping.
# --- Load and prepare data
land_use <- st_read("data/Land_Use/Land_Use.shp") %>%
st_set_crs(3857) %>%
st_transform(4326) %>%
select(c_dig1) %>%
mutate(
c_dig1 = recode_factor(
c_dig1,
`1` = "Residential",
`2` = "Commercial",
`3` = "Industrial",
`4` = "Civic / Institution",
`5` = "Transportation",
`6` = "Culture / Recreation",
`7` = "Park / Open Space",
`8` = "Water",
`9` = "Vacant / Other"
)
)
# --- Define palette keyed by names (not numbers)
landuse_colors <- c(
"Residential"        = "#f2c649",
"Commercial"         = "#e57200",
"Industrial"         = "#a67c52",
"Civic / Institution"= "#7f8dd3",
"Transportation"     = "#c0c0c0",
"Culture / Recreation"= "#ba68c8",
"Park / Open Space"  = "#55a868",
"Water"              = "#4fa9e8",
"Vacant / Other"     = "#d9d9d9"
)
# --- Start map
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lng = -75.1638, lat = 39.9523, zoom = 11)
# --- Add each land-use category as its own overlay group
for (cat in names(landuse_colors)) {
subset_data <- land_use[land_use$c_dig1 == cat, ]
if (nrow(subset_data) == 0) next  # skip if no polygons
m <- m %>%
addPolygons(
data = subset_data,
group = cat,
fillColor = landuse_colors[cat],
color = "black",
weight = 0.3,
fillOpacity = 0.8,
label = ~paste("Land Use:", c_dig1),
highlightOptions = highlightOptions(
weight = 1,
color = "white",
fillOpacity = 0.9,
bringToFront = TRUE
)
)
}
# --- Add layer control and legend
m %>%
addLayersControl(
overlayGroups = names(landuse_colors),
options = layersControlOptions(collapsed = FALSE)
) %>%
addLegend(
"bottomright",
colors = landuse_colors,
labels = names(landuse_colors),
title = "Land Use",
opacity = 0.9
)
land_use_map
#| include: false
library(tidyverse)
library(tidycensus)
library(sf)
library(leaflet)
library(scales)
#| include: false
# Selected ACS data from 2023 5-year survey.
acs_data <- read.csv("data/data_overview.csv")
acs_data$GEOID <- as.character(acs_data$GEOID)
acs_data <- acs_data %>%
mutate(pct_vacancies = housing_vacant / housing_units,
pct_occupied = housing_occupied / housing_units,
pct_white = white / pop_total,
pct_black = black / pop_total,
pct_hispanic = hispanic / pop_total,
pct_asian = asian / pop_total,
pct_native = native / pop_total,
pct_pacific = pacific / pop_total,
pct_other = other_race / pop_total,
pct_two_more = two_more_races / pop_total,
pct_bach = bach_more / pop_total,
num_minor = age_under_5 + age_5_to_9_yrs + age_10_to_14_yrs + age_15_to_17_yrs,
num_adult = age_18_to_24_yrs + age_25_to_34_yrs + age_35_to_44_yrs + age_45_to_54_yrs + age_55_to_64_yrs,
num_elderly = age_65_to_74_yrs + age_75_to_84_yrs + age_85_over,
pct_minor = num_minor / pop_total,
pct_adult = num_adult / pop_total,
pct_elderly = num_elderly / pop_total,
pct_homeowner = occupied_housing / pop_total,
pct_renter = occupied_renter / pop_total,
pct_undergrad_age = age_18_to_24_yrs / pop_total,
pct_no_health_insurance = no_health_insurance / pop_total,
pct_drop_out = age_16_to_19_yrs_drop_out / pop_total,
pct_female = female / pop_total,
pct_male = male / pop_total)
acs_data[is.na(acs_data)] <- 0
#| include: false
# Shapefile data.
philly_tracts <- st_read("data/philly_tracts/philly_tracts.shp")
philly_tracts <- philly_tracts %>%
filter(COUNTYFP == "101")
map_tracts <- left_join(philly_tracts, acs_data, by = "GEOID")
map_tracts <- map_tracts %>%
st_set_crs(4326)
#| echo: false
#| fig-height: 8
#| fig-width: 10
#| out-width: "100%"
# Leaflet mapping.
# Base layer.
pop_map <- leaflet(map_tracts) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = -75.1638, lat = 39.9523, zoom = 11)
# Full map.
pop_map <- pop_map %>%
# Population density.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pop_density)(pop_density),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Population Density: ", format(pop_density, big.mark = ",", digits = 2, nsmall = 2), "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Population Density"
) %>%
# Median income.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", med_h_inc)(med_h_inc),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Population Density: ", format(pop_density, big.mark = ",", digits = 2, nsmall = 2), "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Median Household Income"
) %>%
# White.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pct_white)(pct_white),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_white, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent White"
) %>%
# Black.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pct_black)(pct_black),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_black, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Black"
) %>%
# Hispanic.
addPolygons(
data = map_tracts,
fillColor = ~colorNumeric("viridis", pct_hispanic)(pct_hispanic),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_hispanic, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Hispanic"
) %>%
# Asian.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pct_asian)(pct_asian),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_asian, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Asian"
) %>%
# Native.
addPolygons(
data = map_tracts,
fillColor = ~colorNumeric("viridis", pct_native)(pct_native),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_native, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Native American"
) %>%
# Pacific.
addPolygons(
data = map_tracts,
fillColor = ~colorNumeric("viridis", pct_pacific)(pct_pacific),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_pacific, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Hawaiian / Pacific Islander"
) %>%
# Other.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pct_other)(pct_other),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_other, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Other Race"
) %>%
# Two or more races.
addPolygons(
data = map_tracts,
fillColor = ~colorQuantile("viridis", pct_two_more)(pct_two_more),
weight = 1,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.75,
highlightOptions = highlightOptions(
weight = 2,
color = "black",
dashArray = "",
fillOpacity = 0.75,
bringToFront = TRUE
),
popup = ~paste0(
"Tract: ", NAME, "<br>",
"Value: ", format(round(pct_two_more, 2), nsmall = 2), "%", "<br>",
"Median Income: $", format(med_h_inc, big.mark = ",", nsmall = 0)
),
group = "Percent Two or More Races"
) %>%
# Add legends for each layer
addLegend(
position = "bottomright",
pal = colorQuantile("viridis", map_tracts$pop_density),
values = map_tracts$pop_density,
title = "Population<br>Density",
opacity = 0.75,
group = "Population Density"
) %>%
addLegend(
position = "bottomright",
pal = colorQuantile("viridis", map_tracts$med_h_inc),
values = map_tracts$med_h_inc,
title = "Median<br>Income ($)",
opacity = 0.75,
labFormat = labelFormat(prefix = "$", big.mark = ","),
group = "Median Household Income"
) %>%
addLegend(
position = "bottomright",
pal = colorQuantile("viridis", map_tracts$pct_white),
values = map_tracts$pct_white,
title = "% White",
opacity = 0.75,
labFormat = labelFormat(suffix = "%"),
group = "Percent White"
) %>%
addLegend(
position = "bottomright",
pal = colorQuantile("viridis", map_tracts$pct_black),
values = map_tracts$pct_black,
title = "% Black",
opacity = 0.75,
labFormat = labelFormat(suffix = "%"),
group = "Percent Black"
) %>%
addLegend(
position = "bottomright",
pal = colorNumeric("viridis", map_tracts$pct_hispanic),
values = map_tracts$pct_hispanic,
title = "% Hispanic",
opacity = 0.75,
labFormat = labelFormat(suffix = "%"),
group = "Percent Hispanic"
) %>%
addLegend(
position = "bottomright",
pal = colorQuantile("viridis", map_tracts$pct_asian),
values = map_tracts$pct_asian,
title = "% Asian",
opacity = 0.75,
labFormat = labelFormat(suffix = "%"),
group = "Percent Asian"
) %>%
addLegend(
position = "bottomright",
pal = colorNumeric("viridis", map_tracts$pct_native),
values = map_tracts$pct_native,
title = "% Native<br>American",
opacity = 0.75,
labFormat = labelFormat(suffix = "%"),
group = "Percent Native American"
) %>%
addLegend(
position = "bottomright",
pal = colorNumeric("viridis", map_tracts$pct_pacific),
values = map_tracts$pct_pacific,
title = "% Hawaiian /<br>Pacific Islander",
opacity = 0.75,
labFormat = labelFormat(suffix = "%"),
group = "Percent Hawaiian / Pacific Islander"
) %>%
addLegend(
position = "bottomright",
pal = colorQuantile("viridis", map_tracts$pct_other),
values = map_tracts$pct_other,
title = "% Other<br>Race",
opacity = 0.75,
labFormat = labelFormat(suffix = "%"),
group = "Percent Other Race"
) %>%
addLegend(
position = "bottomright",
pal = colorQuantile("viridis", map_tracts$pct_two_more),
values = map_tracts$pct_two_more,
title = "% Two or<br>More Races",
opacity = 0.75,
labFormat = labelFormat(suffix = "%"),
group = "Percent Two or More Races"
) %>%
# Add layer controls
addLayersControl(
overlayGroups = c("Population Density", "Median Household Income", "Percent Black", "Percent Hispanic", "Percent White", "Percent Asian", "Percent Native American", "Percent Hawaiian / Pacific Islander", "Percent Other Race", "Percent Two or More Races"),
options = layersControlOptions(collapsed = FALSE)
) %>%
hideGroup(c("Median Household Income", "Percent Black", "Percent Hispanic", "Percent White", "Percent Asian", "Percent Native American", "Percent Hawaiian / Pacific Islander", "Percent Other Race", "Percent Two or More Races"))
pop_map
